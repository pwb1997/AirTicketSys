{"version":3,"sources":["./src/app/flights/flights.component.css","./src/app/flights/flights.component.html","./src/app/flights/flights.component.ts","./src/app/flights/flights.module.ts"],"names":[],"mappings":"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","file":"flights.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/flights/flights.component.css\n// module id = ./src/app/flights/flights.component.css\n// module chunks = flights.module","module.exports = \"<div class='main'>\\n  {{message}}\\n  <div [style.display]='customerDisplay'>\\n    <h1>View My Flights</h1>\\n    <h2>Upcoming Flights</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of upcoming\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n    <h2>History</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of history\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div [style.display]='agentDisplay'>\\n      <h1>View My Flights</h1>\\n      <h2>Upcoming Flights</h2>\\n      <table>\\n        <tr>\\n          <th>Ticket #</th>\\n          <th>Booked For</th>\\n          <th>Airline Name</th>\\n          <th>Flight #</th>\\n          <th>Departure Airport</th>\\n          <th>Departure Time</th>\\n          <th>Arrival Airport</th>\\n          <th>Arrival Time</th>\\n          <th>Price</th>\\n          <th>Status</th>\\n        </tr>\\n        <tr *ngFor=\\\"let each of upcoming\\\">\\n          <td>{{each.ticket_id}}</td>\\n          <td>{{each.customer_email}}</td>\\n          <td>{{each.airline_name}}</td>\\n          <td>{{each.flight_num}}</td>\\n          <td>{{each.departure_airport}}</td>\\n          <td>{{displayTime(each.departure_time)}}</td>\\n          <td>{{each.arrival_airport}}</td>\\n          <td>{{displayTime(each.arrival_time)}}</td>\\n          <td>{{each.price}}</td>\\n          <td>{{each.status}}</td>\\n        </tr>\\n      </table>\\n      <h2>History</h2>\\n      <table>\\n        <tr>\\n          <th>Ticket #</th>\\n          <th>Airline Name</th>\\n          <th>Flight #</th>\\n          <th>Departure Airport</th>\\n          <th>Departure Time</th>\\n          <th>Arrival Airport</th>\\n          <th>Arrival Time</th>\\n          <th>Price</th>\\n          <th>Status</th>\\n        </tr>\\n        <tr *ngFor=\\\"let each of history\\\">\\n          <td>{{each.ticket_id}}</td>\\n          <td>{{each.airline_name}}</td>\\n          <td>{{each.flight_num}}</td>\\n          <td>{{each.departure_airport}}</td>\\n          <td>{{displayTime(each.departure_time)}}</td>\\n          <td>{{each.arrival_airport}}</td>\\n          <td>{{displayTime(each.arrival_time)}}</td>\\n          <td>{{each.price}}</td>\\n          <td>{{each.status}}</td>\\n        </tr>\\n      </table>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/flights/flights.component.html\n// module id = ./src/app/flights/flights.component.html\n// module chunks = flights.module","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-flights',\n  templateUrl: './flights.component.html',\n  styleUrls: ['./flights.component.css']\n})\nexport class FlightsComponent implements OnInit {\n\n  upcoming = [];\n  history = [];\n  message = '';\n  customerDisplay = 'none';\n  agentDisplay = 'none';\n\n  displayTime(datetime) {\n    const date = new Date(datetime);\n    return date.getUTCFullYear() + '-' +\n      ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' +\n      ('00' + date.getUTCDate()).slice(-2) + ' ' +\n      ('00' + date.getUTCHours()).slice(-2) + ':' +\n      ('00' + date.getUTCMinutes()).slice(-2);\n  }\n\n  constructor(private http: HttpClient, private cookie: CookieService) { }\n\n  ngOnInit() {\n    this.http.get('/getFlights', { responseType: 'json' }).subscribe(\n      res => {\n        this.upcoming = res['upcoming'];\n        this.history = res['history'];\n        if (this.cookie.get('type') === 'customer') {\n          this.customerDisplay = '';\n        } else {\n          this.agentDisplay = '';\n        }\n      },\n      err => {\n        this.message = 'Not authorized';\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/flights/flights.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlightsComponent } from './flights.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  { path: '', component: FlightsComponent }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule],\n  declarations: [FlightsComponent]\n})\nexport class FlightsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/flights/flights.module.ts"],"sourceRoot":"webpack:///"}