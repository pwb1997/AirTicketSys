{"version":3,"sources":["./src/app/flights/flights.component.css","./src/app/flights/flights.component.html","./src/app/flights/flights.component.ts","./src/app/flights/flights.module.ts"],"names":[],"mappings":"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","file":"flights.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/flights/flights.component.css\n// module id = ./src/app/flights/flights.component.css\n// module chunks = flights.module","module.exports = \"<div class='main'>\\n  {{message}}\\n  <div [style.display]='customerDisplay'>\\n    <h1>View My Flights</h1>\\n    <h2>Upcoming Flights</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of upcoming\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n    <h2>History</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of history\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div [style.display]='agentDisplay'>\\n    <h1>View My Flights</h1>\\n    <h2>Upcoming Flights</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Booked For</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of upcoming\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.customer_email}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n    <h2>History</h2>\\n    <table>\\n      <tr>\\n        <th>Ticket #</th>\\n        <th>Booked For</th>\\n        <th>Airline Name</th>\\n        <th>Flight #</th>\\n        <th>Departure Airport</th>\\n        <th>Departure Time</th>\\n        <th>Arrival Airport</th>\\n        <th>Arrival Time</th>\\n        <th>Price</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let each of history\\\">\\n        <td>{{each.ticket_id}}</td>\\n        <td>{{each.customer_email}}</td>\\n        <td>{{each.airline_name}}</td>\\n        <td>{{each.flight_num}}</td>\\n        <td>{{each.departure_airport}}</td>\\n        <td>{{displayTime(each.departure_time)}}</td>\\n        <td>{{each.arrival_airport}}</td>\\n        <td>{{displayTime(each.arrival_time)}}</td>\\n        <td>{{each.price}}</td>\\n        <td>{{each.status}}</td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div [style.display]='staffDisplay'>\\n    <div [style.display]='flightDisplay'>\\n      <h1>View Flights</h1>\\n      <form #f=\\\"ngForm\\\">\\n        From\\n        <input type=\\\"date\\\" (ngModelChange)='update()' [(ngModel)]='startDate' name='startDate' useValueAsDate> To\\n        <input type=\\\"date\\\" (ngModelChange)='update()' [(ngModel)]='endDate' name='endDate' useValueAsDate>\\n      </form>\\n      <table>\\n        <tr>\\n          <th>Flight #</th>\\n          <th>Airplane ID</th>\\n          <th>Departure Airport</th>\\n          <th>Departure Time</th>\\n          <th>Arrival Airport</th>\\n          <th>Arrival Time</th>\\n          <th>Price</th>\\n          <th>Status</th>\\n          <th>Show Detail</th>\\n        </tr>\\n        <tr *ngFor=\\\"let each of filtered\\\">\\n          <td>{{each.flight_num}}</td>\\n          <td>{{each.airplane_id}}</td>\\n          <td>{{each.departure_airport}}</td>\\n          <td>{{displayTime(each.departure_time)}}</td>\\n          <td>{{each.arrival_airport}}</td>\\n          <td>{{displayTime(each.arrival_time)}}</td>\\n          <td>{{each.price}}</td>\\n          <td>{{each.status}}</td>\\n          <td>\\n            <button (click)='detail(each)'>Show Detail</button>\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n    <div [style.display]='detailDisplay'>\\n      <h1>Flight #{{detailNum}}</h1>\\n      <h3>Customers</h3>\\n      <p>{{customers}}</p>\\n      <h3>Update Status</h3>\\n      <form #f=\\\"ngForm\\\" class='form'>\\n        <select [(ngModel)]=\\\"status\\\" name='status'>\\n          <option value=\\\"upcoming\\\">Upcoming</option>\\n          <option value=\\\"on time\\\">On Time</option>\\n          <option value=\\\"delayed\\\">Delayed</option>\\n          <option value=\\\"cancelled\\\">Cancelled</option>\\n        </select>\\n        <div class='button'>\\n          <button (click)='onSubmit(f)'>Update</button>\\n          <button (click)=\\\"this.detailDisplay='none';this.flightDisplay=''\\\">Close Detail</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/flights/flights.component.html\n// module id = ./src/app/flights/flights.component.html\n// module chunks = flights.module","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-flights',\n  templateUrl: './flights.component.html',\n  styleUrls: ['./flights.component.css']\n})\nexport class FlightsComponent implements OnInit {\n\n  upcoming = [];\n  history = [];\n  tickets;\n  flights;\n  filtered = [];\n  message = '';\n  customerDisplay = 'none';\n  agentDisplay = 'none';\n  staffDisplay = 'none';\n  startDate;\n  endDate;\n  status = 'upcoming';\n\n  detailDisplay = 'none';\n  flightDisplay = '';\n  detailNum = '';\n  customers = '';\n\n  detail(flight) {\n    this.detailDisplay = '';\n    this.flightDisplay = 'none';\n    this.customers = '';\n    this.detailNum = flight.flight_num;\n    for (const each of this.tickets) {\n      if (each.flight_num === flight.flight_num) {\n        this.customers += each.customer_email + ', ';\n      }\n    }\n  }\n\n  onSubmit(f: NgForm) {\n    this.http.post('/changeStatus', { 'flight_num': this.detailNum, 'status': this.status }).subscribe(\n      res => {\n        this.message = 'Status updated';\n        this.ngOnInit();\n      },\n      err => {\n        if (err.status === '401') {\n          this.message = 'Unauthorized operation';\n        } else {\n          this.message = 'Failed to update status';\n        }\n      }\n    );\n  }\n\n  displayTime(datetime) {\n    const date = new Date(datetime);\n    return date.getUTCFullYear() + '-' +\n      ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' +\n      ('00' + date.getUTCDate()).slice(-2) + ' ' +\n      ('00' + date.getUTCHours()).slice(-2) + ':' +\n      ('00' + date.getUTCMinutes()).slice(-2);\n  }\n\n  update() {\n    setTimeout(() => {\n      const result = {};\n      const startTime = this.startDate.getTime();\n      const end = new Date(this.endDate);\n      end.setDate(end.getDate() + 1);\n      const endTime = end.getTime();\n      for (const each of this.flights) {\n        const deptime = new Date(each.departure_time).getTime();\n        if (deptime <= endTime && deptime > startTime) {\n          this.filtered.push(each);\n        }\n      }\n    }, 10);\n  }\n\n  constructor(private http: HttpClient, private cookie: CookieService) { }\n\n  ngOnInit() {\n    this.http.get('/getFlights', { responseType: 'json' }).subscribe(\n      res => {\n        this.upcoming = res['upcoming'];\n        this.history = res['history'];\n        if (this.cookie.get('type') === 'customer') {\n          this.customerDisplay = '';\n        } else if (this.cookie.get('type') === 'booking_agent') {\n          this.agentDisplay = '';\n        } else {\n          this.staffDisplay = '';\n          this.tickets = res['tickets'];\n          this.flights = res['flights'];\n          this.startDate = new Date();\n          this.endDate = new Date();\n          this.endDate.setMonth(this.endDate.getMonth() + 1);\n          this.update();\n        }\n      },\n      err => {\n        this.message = 'Not authorized';\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/flights/flights.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlightsComponent } from './flights.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { DateValueAccessorModule } from 'angular-date-value-accessor';\n\nconst routes: Routes = [\n  { path: '', component: FlightsComponent }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, DateValueAccessorModule],\n  declarations: [FlightsComponent]\n})\nexport class FlightsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/flights/flights.module.ts"],"sourceRoot":"webpack:///"}