{"version":3,"sources":["./src/app/registeration/registeration.component.css","./src/app/registeration/registeration.component.html","./src/app/registeration/registeration.component.ts","./src/app/registeration/registeration.module.ts"],"names":[],"mappings":"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","file":"registeration.module.chunk.js","sourcesContent":["module.exports = \"h1 {\\n    font-family: 'PoiretOne';\\n    font-size: 60px;\\n    margin-top: 0px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registeration/registeration.component.css\n// module id = ./src/app/registeration/registeration.component.css\n// module chunks = registeration.module","module.exports = \"<div class='main'>\\n  <h1>Registeration</h1>\\n\\n  <form #f=\\\"ngForm\\\">\\n    <div class='radio'>\\n      <input type=\\\"radio\\\" name='type' value='customer' [(ngModel)]='type' (ngModelChange)='toggleDisplay()'>Customer\\n      <input type=\\\"radio\\\" name='type' value='airline_staff' [(ngModel)]='type' (ngModelChange)='toggleDisplay()'>Airline Staff\\n      <input type=\\\"radio\\\" name='type' value='booking_agent' [(ngModel)]='type' (ngModelChange)='toggleDisplay()'>Booking Agent\\n    </div>\\n  </form>\\n\\n  <form #customer=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitCustomer(customer)\\\" [style.display]='customerDisplay' class='form'>\\n    Email\\n    <br>\\n    <input type='text' name='email' ngModel required>\\n    <br> Name\\n    <br>\\n    <input type='text' name='name' ngModel required>\\n    <br> Password\\n    <br>\\n    <input type='text' name='password' ngModel required>\\n    <br> Building number\\n    <br>\\n    <input type='text' name='building_number' ngModel required>\\n    <br> Street\\n    <br>\\n    <input type='text' name='street' ngModel required>\\n    <br> City\\n    <br>\\n    <input type='text' name='city' ngModel required>\\n    <br> State\\n    <br>\\n    <input type='text' name='state' ngModel required>\\n    <br> Phone Number\\n    <br>\\n    <input type='text' name='phone_number' ngModel required>\\n    <br> Passport Number\\n    <br>\\n    <input type='text' name='passport_number' ngModel required>\\n    <br> Passport Expiration\\n    <br>\\n    <input type='date' name='passport_expiration' ngModel required>\\n    <br> Passport Country\\n    <br>\\n    <input type='text' name='passport_country' ngModel required>\\n    <br> Date of Birth\\n    <br>\\n    <input type='date' name='date_of_birth' ngModel required>\\n    <br>\\n    <div class='button'>\\n      <button [disabled]='customer.form.invalid'>Register</button>\\n    </div>\\n  </form>\\n\\n  <form #staff=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitStaff(staff)\\\" [style.display]='staffDisplay' class='form'>\\n    Username\\n    <br>\\n    <input type='text' name='username' ngModel required>\\n    <br> Password\\n    <br>\\n    <input type='text' name='password' ngModel required>\\n    <br> First Name\\n    <br>\\n    <input type='text' name='first_name' ngModel required>\\n    <br> Last Name\\n    <br>\\n    <input type='text' name='last_name' ngModel required>\\n    <br> Date of Birth\\n    <br>\\n    <input type='date' name='date_of_birth' ngModel required>\\n    <br> Airline Name\\n    <br>\\n    <input type='text' name='airline_name' ngModel required>\\n    <br>\\n    <div class='button'>\\n      <button [disabled]='staff.form.invalid'>Register</button>\\n    </div>\\n  </form>\\n\\n  <form #agent=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAgent(agent)\\\" [style.display]='agentDisplay' class='form'>\\n    Email <br>\\n    <input type='text' name='email' ngModel required>\\n    <br> Password <br>\\n    <input type='text' name='password' ngModel required>\\n    <br>\\n    <div class='button'>\\n      <button [disabled]='agent.form.invalid'>Register</button>\\n    </div>\\n  </form>\\n  \\n</div>\\n\\n<div>\\n  <div id='top-message' [style.display]='topMessageDisplay' [style.background-color]=\\\"topMessageBackgroundColor\\\" style=\\\"z-index: 9999\\\">\\n    <p>{{topMessage}}</p>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registeration/registeration.component.html\n// module id = ./src/app/registeration/registeration.component.html\n// module chunks = registeration.module","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport * as md5 from 'md5';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registeration',\n  templateUrl: './registeration.component.html',\n  styleUrls: ['./registeration.component.css']\n})\nexport class RegisterationComponent implements OnInit {\n  type = 'customer';\n  customerDisplay = '';\n  staffDisplay = 'none';\n  agentDisplay = 'none';\n  topMessageDisplay = 'none';\n  topMessage = '';\n  topMessageBackgroundColor = '';\n\n  toggleDisplay() {\n    this.customerDisplay = 'none';\n    this.staffDisplay = 'none';\n    this.agentDisplay = 'none';\n    switch (this.type) {\n      case 'customer':\n        this.customerDisplay = '';\n        break;\n      case 'airline_staff':\n        this.staffDisplay = '';\n        break;\n      case 'booking_agent':\n        this.agentDisplay = '';\n        break;\n    }\n  }\n\n  onSubmitCustomer(customer: NgForm) {\n    if (customer.invalid) {\n      return;\n    }\n    customer.value.password = md5(customer.value.password);\n    this.http.post('/registeration/customer', customer.value, { responseType: 'text' }).subscribe(\n      res => {\n        this.topMessageDisplay = '';\n        this.topMessageBackgroundColor = '#00F6ED';\n        this.topMessage = 'Account created, redirecting you to login ...';\n        window.setTimeout(() => {\n          this.router.navigate(['login']);\n        }, 3000);\n      },\n      err => {\n        if (err.status === 409) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Email exists, try another one or login directly';\n        }\n        if (err.status === 500) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Registeration failed, please check your information and try again';\n        }\n      });\n  }\n\n  onSubmitStaff(staff: NgForm) {\n    if (staff.invalid) {\n      return;\n    }\n    staff.value.password = md5(staff.value.password);\n    this.http.post('/registeration/staff', staff.value, { responseType: 'text' }).subscribe(\n      res => {\n        this.topMessageDisplay = '';\n        this.topMessageBackgroundColor = '#00F6ED';\n        this.topMessage = 'Account created, redirecting you to login ...';\n        window.setTimeout(() => {\n          this.router.navigate(['login']);\n        }, 3000);\n      },\n      err => {\n        if (err.status === 409) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Email exists, try another one or login directly';\n        }\n        if (err.status === 500) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Registeration failed, please check your information and try again';\n        }\n      });\n  }\n\n  onSubmitAgent(agent: NgForm) {\n    if (agent.invalid) {\n      return;\n    }\n    agent.value.password = md5(agent.value.password);\n    this.http.post('/registeration/agent', agent.value, { responseType: 'text' }).subscribe(\n      res => {\n        this.topMessageDisplay = '';\n        this.topMessageBackgroundColor = '#00F6ED';\n        this.topMessage = 'Account created, redirecting you to login ...';\n        window.setTimeout(() => {\n          this.router.navigate(['login']);\n        }, 3000);\n      },\n      err => {\n        if (err.status === 409) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Email exists, try another one or login directly';\n        }\n        if (err.status === 500) {\n          this.topMessageDisplay = '';\n          this.topMessageBackgroundColor = 'orange';\n          this.topMessage = 'Registeration failed, please check your information and try again';\n        }\n      });\n  }\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registeration/registeration.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterationComponent } from './registeration.component';\n\nconst routes: Routes = [{ path: '', component: RegisterationComponent }];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule],\n  declarations: [RegisterationComponent]\n})\nexport class RegisterationModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registeration/registeration.module.ts"],"sourceRoot":"webpack:///"}